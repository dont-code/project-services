name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: The branch to release in test
        required: false
        default: Development
        type: choice
        options:
          - Development
          - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Create mongo Docker container
      id: build_mongo_docker
      uses: DigiPie/mongo-action@v2.0.1
      with:
        image-version: latest
        port: 27017
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: main
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '21'
    - name: Cache Maven repository
      uses: actions/cache@v4
      with:
        path: .m2/repository # maven repository files are stored here
        key: ${{ runner.OS }}-maven-${{ hashFiles('pom.xml') }}
    - name: override Mongo connection url
      uses: myci-actions/export-env-var@1
      with:
        name: _TEST_QUARKUS_MONGODB_PROJECTS_CONNECTION_STRING
        value: "mongodb://localhost:27017"
    - name: Build
      run: mvn -B package --file pom.xml
    - uses: actions/upload-artifact@v4
        # Test run screenshots only on failure
      if: success()
      with:
        name: project-services-runner.jar
        path: target/project-services-runner.jar
    - name: Deploy to test
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.TEST_HOST_NAME }}
        username: root
        key: ${{ secrets.TEST_KEY }}
        passphrase: ${{ secrets.TEST_PASSPHRASE }}
        source: "target/project-services-runner.jar"
        target: "/home/dont-code/services"
        strip_components: 1
    - name: Restart test
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.TEST_HOST_NAME }}
        username: root
        key: ${{ secrets.TEST_KEY }}
        passphrase: ${{ secrets.TEST_PASSPHRASE }}
        script:
          sudo -u dont-code /home/dont-code/bin/restart-service.sh project-services
